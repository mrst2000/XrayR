name: Build and Release

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/*.yml"
  release:
    types: [ published ]

jobs:
  build-linux64:
    runs-on: ubuntu-latest
    env:
      GOOS: linux
      GOARCH: amd64
      CGO_ENABLED: 0

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ^1.20

      - name: Get project dependencies
        run: go mod download

      - name: Build binary
        run: |
          mkdir -p build_assets
          go build -v -o build_assets/XrayR -trimpath -ldflags "-s -w -buildid="

      - name: Copy release files
        run: |
          cp README.md LICENSE ./build_assets/
          cp release/config/*.json ./build_assets/
          cp release/config/config.yml.example ./build_assets/config.yml
          cp release/config/rulelist ./build_assets/

          # Download and verify .dat files
          declare -a FILES=("geoip geoip geoip" "domain-list-community dlc geosite")
          for i in "${FILES[@]}"; do
            set -- $i
            DOWNLOAD_URL="https://raw.githubusercontent.com/v2fly/$1/release/$2.dat"
            FILE_NAME="$3.dat"
            curl -L "$DOWNLOAD_URL" -o ./build_assets/$FILE_NAME
            HASH=$(curl -sL "${DOWNLOAD_URL}.sha256sum" | awk '{print $1}')
            FILE_HASH=$(sha256sum "./build_assets/$FILE_NAME" | awk '{print $1}')
            [ "$HASH" == "$FILE_HASH" ] || { echo "$FILE_NAME hash mismatch"; exit 1; }
          done

      - name: Create ZIP archive
        run: |
          cd build_assets
          touch -mt $(date +%Y01010000) *
          zip -9vr ../XrayR-linux-amd64.zip .
          cd ..

          FILE=XrayR-linux-amd64.zip
          DGST=$FILE.dgst
          for METHOD in md5 sha1 sha256 sha512; do
            openssl dgst -$METHOD $FILE | sed 's/([^)]*)//g' >> $DGST
          done

      - name: Upload to GitHub Release
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: XrayR-linux-amd64.zip*
          tag: ${{ github.ref }}
          file_glob: true

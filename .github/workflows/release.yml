name: Build and Release (Linux AMD64 Only)

on:
  release:
    types: [published]

jobs:
  build-linux-amd64:
    runs-on: ubuntu-latest
    env:
      GOOS: linux
      GOARCH: amd64
      CGO_ENABLED: 0
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ^1.20

      - name: Get project dependencies
        run: go mod download

      - name: Build XrayR
        run: |
          mkdir -p build_assets
          go build -v -o build_assets/XrayR -trimpath -ldflags "-s -w -buildid="

      - name: Copy release files
        run: |
          cp README.md LICENSE release/config/* build_assets/
          LIST=('geoip geoip geoip' 'domain-list-community dlc geosite')
          for i in "${LIST[@]}"
          do
            INFO=($(echo $i | awk 'BEGIN{FS=" ";OFS=" "} {print $1,$2,$3}'))
            DOWNLOAD_URL="https://raw.githubusercontent.com/v2fly/${INFO[0]}/release/${INFO[1]}.dat"
            FILE_NAME="${INFO[2]}.dat"
            curl -L "${DOWNLOAD_URL}" -o ./build_assets/${FILE_NAME}
            HASH="$(curl -sL "${DOWNLOAD_URL}.sha256sum" | awk '{print $1}')"
            [ "$(sha256sum ./build_assets/${FILE_NAME} | awk '{print $1}')" == "${HASH}" ] || exit 1
          done

      - name: Create ZIP archive
        run: |
          cd build_assets
          zip -9vr ../XrayR-linux-amd64.zip .
          cd ..
          for METHOD in md5 sha1 sha256 sha512; do
            openssl dgst -$METHOD XrayR-linux-amd64.zip >> XrayR-linux-amd64.zip.dgst
          done

      - name: Upload binaries to GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./XrayR-linux-amd64.zip*
          tag: ${{ github.ref }}
          file_glob: true
